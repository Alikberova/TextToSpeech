map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
  listen 80;
    server_name texttospeech.duckdns.org www.texttospeech.duckdns.org;
    return 301 https://$host$request_uri;
}

server {
  listen [::]:443 ssl ipv6only=on;
  listen 443 ssl;

  server_name texttospeech.duckdns.org;

  ssl_certificate /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;

  gzip on;
  gzip_http_version 1.1;
  gzip_disable      "MSIE [1-6]\.";
  gzip_min_length   256;
  gzip_vary         on;
  gzip_proxied      expired no-cache no-store private auth;
  gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level   9;
  client_max_body_size 5M;
  proxy_read_timeout 200s;

  location / {
    include /etc/nginx/mime.types;
    root /usr/share/nginx/html;
    add_header Cache-Control "public, max-age=1M";
    try_files $uri $uri/ /index.html =404;
  }

  location /api/ {
    # proxy_set_header Host "texttospeech.duckdns.org";
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_pass https://api:443;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_ssl_server_name on;

    proxy_ssl_server_name on;
    proxy_pass https://api:443;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /audioHub {
    # proxy_set_header Host "texttospeech.duckdns.org";
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_pass https://api:443;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_ssl_server_name on;

    proxy_ssl_server_name on;
    proxy_pass https://api:443;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /healthcheck {
    access_log off;
    add_header 'Content-Type' 'text/plain';
    return 200 "Healthy\n";
  }
}

# logs: /var/log/nginx/error.log.1

# todo { error_log /path/to/error.log debug