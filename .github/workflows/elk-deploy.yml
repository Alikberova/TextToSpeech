name: Elasticsearch deployment

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
     elk-remote-path: ${{ vars.APP_DATA_PATH }}/elk
     elk-source-path: docker/elk

    steps:
    - uses: actions/checkout@v5

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Create .env file
      run: |
        echo "ElasticsearchConfig__Password=${{ secrets.ELASTICSEARCH__PASSWORD}}" > ${{ env.elk-source-path }}/.env
        echo "STACK_VERSION=9.1.4" >> ${{ env.elk-source-path }}/.env
    
    - name: Copy files to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ vars.TTS_SERVER_HOST }}
        username: ${{ vars.TTS_SERVER_USER }}
        key: ${{ secrets.TTS_SERVER_SSH_PRIVATE_KEY }}
        source: ${{ env.elk-source-path }}/
        target: ${{ env.elk-remote-path }}
        strip_components: 2 # drop the first two folders (docker/elk)

    - name: Build and deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.TTS_SERVER_HOST }}
        username: ${{ vars.TTS_SERVER_USER }}
        key: ${{ secrets.TTS_SERVER_SSH_PRIVATE_KEY }}
        script: |
          cd ${{ env.elk-remote-path }}
          docker network inspect elk >/dev/null 2>&1 || docker network create elk
          docker compose -f docker-compose-elk.yml build
          docker compose -f docker-compose-elk.yml down || true
          docker compose -f docker-compose-elk.yml up -d --force-recreate

    - name: Verify ELK services are healthy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.TTS_SERVER_HOST }}
        username: ${{ vars.TTS_SERVER_USER }}
        key: ${{ secrets.TTS_SERVER_SSH_PRIVATE_KEY }}
        script: |
          cd ${{ env.elk-remote-path }}

          echo "Waiting for containers to become healthy..."
          for i in {1..30}; do
            healthy_count=$(docker compose -f docker-compose-elk.yml ps | grep "(healthy)" | wc -l)

            expected_count=2

            if [ "$healthy_count" -eq "$expected_count" ]; then
              exit 0
            fi

            echo "Waiting... ($i/30) â€” $healthy_count/$expected_count healthy"
            sleep 3
          done

          echo "Some containers did not become healthy in time"
          docker compose -f docker-compose-elk.yml ps -a
          exit 1
