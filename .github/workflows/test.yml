name: CI

on:
  push:
    branches:
      - master
      - dev
      - dev-3
      - deploy
  pull_request:
    branches:
      - master
      - dev
      - dev-3
env:
  environment: Development
  image_tag_version: test

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Fill env file
        run: |
          echo "${{ secrets[format('{0}_env_file', env.environment)]}}" > .env

      - name: Import environment variables from a env file 
        uses: falti/dotenv-action@v1.1
        with:
          export-variables: true
          mask-variables: true

      # - name: Build Docker Compose services
      #   run: |
      #     docker compose build

      - name: Pull Docker images for cache (if exist)
        run: |
          docker pull alikberova/booktoaudio.api${{ env.image_tag_version }}:latest || true
          docker pull alikberova/booktoaudio.web${{ env.image_tag_version }}:latest || true
  
      - name: Build and start containers
        run: |
          export DOCKER_BUILDKIT=1
          IMAGE_TAG_VERSION=${{ env.image_tag_version }} docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
          docker compose push
          IMAGE_TAG_VERSION=${{ env.image_tag_version }} docker-compose up -d

      - name: Restore dependencies
        run: dotnet restore
        shell: bash

      - name: Run unit tests
        run: dotnet test --no-restore --filter BookToAudio.UnitTests

      - name: Run integration tests #todo run with real api on master
        run: dotnet test --no-restore --filter BookToAudio.IntegrationTests

      # - name: Start Docker Compose services
      #   run: docker compose up -d

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Run Selenium tests
        run: dotnet test --no-restore --filter BookToAudio.SeleniumTests