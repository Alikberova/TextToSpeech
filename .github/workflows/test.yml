name: Tests Execution

permissions:
  contents: read
  packages: read
  id-token: write

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        test_type: [ Selenium, Unit, Integration ]

    steps:
      - uses: actions/checkout@v5

      - name: Create .env file for tests
        env:
          github_ref: ${{ github.head_ref || github.ref_name }}
        run: |
          cp .env.example .env
          normalized_ref=$(echo "${github_ref}" | sed 's/\//-/g')
          IMAGE_TAG_VERSION="test-${normalized_ref}"
          echo "" >> .env
          echo "IMAGE_TAG_VERSION=$IMAGE_TAG_VERSION" >> .env
          echo "AppDataPath=$RUNNER_TEMP/tts-app" >> .env
          cat .env.test >> .env

      - name: Export environment variables from an env file 
        uses: falti/dotenv-action@v1.1
        with:
          export-variables: true
          keys-case: bypass
          log-variables: true

      - name: Generate test SSL certs
        if: matrix.test_type == 'Selenium'
        run: |
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -subj "/CN=localhost" \
            -addext "subjectAltName=DNS:localhost" \
            -keyout $CERTS_PATH/privkey.pem \
            -out $CERTS_PATH/fullchain.pem

      - name: Log in to Docker Hub
        if: matrix.test_type == 'Selenium'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and start containers for tests
        if: matrix.test_type == 'Selenium'
        run: |
          export DOCKER_BUILDKIT=1
          docker compose build --build-arg BUILDKIT_INLINE_CACHE=1
          docker compose push
          docker network create elk
          docker compose up -d

      - name: Cache NuGet Packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Override Redis for test runner
        run: echo "ConnectionStrings__Redis=localhost:6379,allowAdmin=true" >> $GITHUB_ENV

      - name: Run Tests
        run: dotnet test --no-restore --filter TextToSpeech.${{ matrix.test_type }}Tests

      - name: Show ChromeDriver logs
        if: matrix.test_type == 'Selenium' && failure()
        run: |
          echo "=== ChromeDriver logs ==="
          ls /home/runner/TtsTest || true
          cat /home/runner/TtsTest/chromedriver.log || true

      - name: Show logs api
        if: matrix.test_type == 'Selenium' && failure()
        run: |
          docker logs api || true