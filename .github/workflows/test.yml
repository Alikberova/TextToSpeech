name: Tests execution

on:
  push:
    branches:
      - master
      - dev
      - dev-3
  pull_request:
    branches:
      - master
      - dev
      - dev-3
env:
  environment: Development
  image_tag_version: test

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
    
      - name: Fill env file
        run: |
          echo "${{ secrets[format('{0}_env_file', env.environment)]}}" > .env

      - name: Import environment variables from a env file 
        uses: falti/dotenv-action@v1.1
        with:
          export-variables: true
          mask-variables: true  

      - name: Cache NuGet Packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore #--no-cache
        shell: bash

      - name: Run unit tests
        run: dotnet test --no-restore --filter BookToAudio.UnitTests

      - name: Run integration tests #todo run with real api on master
        run: dotnet test --no-restore --filter BookToAudio.IntegrationTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Pull Docker images for cache (if exist)
        run: |
          docker pull alikberova/booktoaudio.api:${{ env.image_tag_version }} || true
          docker pull alikberova/booktoaudio.web:${{ env.image_tag_version }} || true
  
      - name: Build and start containers
        run: |
          export DOCKER_BUILDKIT=1
          export IMAGE_TAG_VERSION=${{ env.image_tag_version }}
          IMAGE_TAG_VERSION=${{ env.image_tag_version }} docker compose build --build-arg BUILDKIT_INLINE_CACHE=1
          docker compose push
          IMAGE_TAG_VERSION=${{ env.image_tag_version }} docker compose up -d

      - name: Run Selenium tests
        run: dotnet test --no-restore --filter BookToAudio.SeleniumTests