name: Tests Execution

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  environment: Development
  certs-path: /home/runner/work/TextToSpeech/TextToSpeech/TextToSpeech.Web/nginx/certs
  image_tag_version: ${{ github.head_ref || github.ref_name }} 

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        test_type: [ Selenium, Unit, Integration ]

    steps:
      - uses: actions/checkout@v4

      - name: Fill env file and SSL certificate from secrets
        run: |
          echo Env file is ${{ format('{0}_env_file', env.environment) }}
          echo "${{ secrets[format('{0}_env_file', env.environment)]}}" > .env
          echo "CERTS_PATH=${{ env.certs-path }}" >> .env
          echo "${{ secrets.SSL_ANGULAR_PRIVKEY}}" > ${{ env.certs-path }}/privkey.pem
          echo "${{ secrets.SSL_ANGULAR_FULLCHAIN}}" > ${{ env.certs-path }}/fullchain.pem

      - name: Import environment variables from an env file 
        uses: falti/dotenv-action@v1.1
        with:
          export-variables: true
          mask-variables: true  

      - name: Log in to Docker Hub
        if: matrix.test_type == 'Selenium'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and start containers for tests
        if: matrix.test_type == 'Selenium'
        run: |
          export DOCKER_BUILDKIT=1
          export IMAGE_TAG_VERSION=${{ env.image_tag_version }}
          IMAGE_TAG_VERSION=${{ env.image_tag_version }} docker compose build --build-arg BUILDKIT_INLINE_CACHE=1
          docker compose push
          docker network create elk
          IMAGE_TAG_VERSION=${{ env.image_tag_version }} docker compose up -d

      - name: Cache NuGet Packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Run Tests
        run: dotnet test --no-restore --filter TextToSpeech.${{ matrix.test_type }}Tests

      - name: Log Backend Logs (if Selenium tests failed)
        if: matrix.test_type == 'Selenium' && failure()
        run: docker logs api

      - name: Log Frontend Logs (if Selenium tests failed)
        if: matrix.test_type == 'Selenium' && failure()
        run: docker logs web