name: CI

on:
  push:
    branches:
      - master
      - dev
      - dev-3
      - deploy
  pull_request:
    branches:
      - master
      - dev
      - dev-3
env:
  environment: Development

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set up Docker Buildx (required for --cache-from and --cache-to options)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 #todo check version

      # Cache Docker layers
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Fill env file
        run: |
          echo "${{ secrets[format('{0}_env_file', env.environment)]}}" > .env

      - name: Import environment variables from a env file for integration tests
        shell: bash
        run: |
          while read line; do
            echo "$line" >> $GITHUB_ENV
          done < .env

      # - name: Build Docker Compose services
      #   run: |
      #     docker compose build

      # Build and cache Docker images using Docker Compose
      # - name: Build images using Docker Compose
      #   run: |
      #     docker compose build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache

      - name: Build Docker Compose services with caching
        run: |
          docker compose build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from type=local,src=/tmp/.buildx-cache

      - name: Post-Build to load the cache for next time
        run: |
          docker buildx prune --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max --build-arg BUILDKIT_INLINE_CACHE=1
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Restore dependencies
        run: dotnet restore
        shell: bash

      - name: Run unit tests
        run: dotnet test --no-restore --filter BookToAudio.UnitTests

      - name: Run integration tests #todo run with real api on master
        run: dotnet test --no-restore --filter BookToAudio.IntegrationTests

      - name: Start Docker Compose services
        run: docker compose up -d

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Run Selenium tests
        run: dotnet test --no-restore --filter BookToAudio.SeleniumTests
        # lala